package org.example;

public class Main {
    /*Паттерн "Адаптер" позволяет объектам с несовместимыми интерфейсами работать вместе.
    Он оборачивает один объект (адаптируемый объект) в другой объект (адаптер) для предоставления совместимого интерфейса.
    То есть, адаптер преобразует интерфейс одного класса к интерфейсу, ожидаемому клиентом.
     Это позволяет объектам совместно взаимодействовать, не изменяя их исходный код.

     Отличия между паттернами "Адаптер" и "Декоратор":

    Паттерн "Адаптер" используется для обеспечения совместимости между объектами с несовместимыми интерфейсами.
    Он оборачивает адаптируемый объект и предоставляет совместимый интерфейс клиенту.
    Паттерн "Декоратор" расширяет функциональность объекта, оборачивая его в другой объект и добавляя новые возможности.
    Оба объекта имеют одинаковый интерфейс.*/
    public static void main(String[] args) {
        Adaptee adaptee = new Adaptee();
        Adapter adapter = new Adapter(adaptee);
        adapter.request();
    }
}