package org.example;

public class Main {
    /*Паттерн Декоратор добавляет новое поведение или функциональность объекту, не изменяя его интерфейса.
    Это позволяет гибко расширять функциональность объектов во время выполнения.
    Отличия между паттернами "Адаптер" и "Декоратор":

    Паттерн "Адаптер" используется для обеспечения совместимости между объектами с несовместимыми интерфейсами.
    Он оборачивает адаптируемый объект и предоставляет совместимый интерфейс клиенту.
    Паттерн "Декоратор" расширяет функциональность объекта, оборачивая его в другой объект и добавляя новые возможности.
    Оба объекта имеют одинаковый интерфейс.*/
    public static void main(String[] args) {
        Shape circle = new Circle();
        circle.draw();
        Shape redCircle = new RedShapeDecorator(new Circle());
        redCircle.draw();
    }
}